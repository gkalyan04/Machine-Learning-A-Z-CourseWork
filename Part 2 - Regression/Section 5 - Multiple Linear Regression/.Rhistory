print("Hello world!")
split = sample.split(dataset$Salary,SplitRatio = 2/3)
setwd("F:/Udemy/Udemy - machinelearning/04 Simple Linear Regression")
training_set = subset(dataset, split == TRUE)
setwd("C:/Users/G KALYAN/Desktop/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 4 - Simple Linear Regression")
setwd("C:/Users/G KALYAN/Desktop/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 4 - Simple Linear Regression")
set.seed(123)
# Data Preprocessing Template
# Importing the dataset
dataset = read.csv('Salary_Data.csv')
# dataset = dataset[,2:3]
# Splitting the dataset into the Traininng set and Test set
#install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary,SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set[,2:3] = scale(training_set[,2:3])
# test_set[,2:3] = scale(test_set[,2:3])
# Fitting Simple Linear Regression to the Training set
regressor = lm(display = Salary ~ YearsExperience,
data = training_set)
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)
View(regressor)
View(regressor)
y_pred
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
y_pred = predict(regressor, newdata = test_set)
y_pred
View(regressor)
summary(regressor)
y_pred = predict(regressor, newdata = test_set)
y_pred
install.packages('ggplot2')
library("ggplot2", lib.loc="~/R/win-library/3.5")
detach("package:ggplot2", unload=TRUE)
library('ggplot2')
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training)') +
xlab('Years of experience') +
ylab('Salary')
# Visulizing the Test set results
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Test)') +
xlab('Years of experience') +
ylab('Salary')
setwd("C:/Users/G KALYAN/Desktop/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 5 - Multiple Linear Regression")
setwd("C:/Users/G KALYAN/Desktop/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 5 - Multiple Linear Regression")
dataset = read.csv('50_Startups.csv')
View(dataset)
View(regressor)
View(regressor)
View(regressor)
View(regressor)
dataset = read.csv('50_Startups.csv')
View(dataset)
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(training_set)
View(training_set)
View(test_set)
View(test_set)
regressor = lm(fromula = Profit ~ .,
data = training_set)
View(regressor)
View(regressor)
summary(regressor)
regressor = lm(formula = Profit ~ .,
data = training_set)
summary(regressor)
y_pred = predict(regressor, newdata = test_Set)
y_pred = predict(regressor, newdata = test_set)
View(test_set)
View(test_set)
test_set
y_pred
regressor = lm(formula = Profit ~ R.D.Spend,
data = training_set)
y_pred = predict(regressor, newdata = test_set)
y_pred
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = training_set)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend ,
data = training_set)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Marketing.Spend ,
data = training_set)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend ,
data = training_set)
summary(regressor)
